//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class ProjetoStefaniniEntities1 : DbContext
{
    public ProjetoStefaniniEntities1()
        : base("name=ProjetoStefaniniEntities1")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<Endereco> Endereco { get; set; }
    public virtual DbSet<Login> Login { get; set; }
    public virtual DbSet<Usuario> Usuario { get; set; }

    public virtual int DeleteEndereco(string cep)
    {
        var cepParameter = cep != null ?
            new ObjectParameter("Cep", cep) :
            new ObjectParameter("Cep", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEndereco", cepParameter);
    }

    public virtual int DeleteLogin(string login)
    {
        var loginParameter = login != null ?
            new ObjectParameter("Login", login) :
            new ObjectParameter("Login", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLogin", loginParameter);
    }

    public virtual int DeleteUsuario(string login)
    {
        var loginParameter = login != null ?
            new ObjectParameter("login", login) :
            new ObjectParameter("login", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUsuario", loginParameter);
    }

    public virtual int InsertEndereco(string cep, string logradouro, string bairro, string cidade, string uF, string complemento)
    {
        var cepParameter = cep != null ?
            new ObjectParameter("Cep", cep) :
            new ObjectParameter("Cep", typeof(string));

        var logradouroParameter = logradouro != null ?
            new ObjectParameter("Logradouro", logradouro) :
            new ObjectParameter("Logradouro", typeof(string));

        var bairroParameter = bairro != null ?
            new ObjectParameter("Bairro", bairro) :
            new ObjectParameter("Bairro", typeof(string));

        var cidadeParameter = cidade != null ?
            new ObjectParameter("Cidade", cidade) :
            new ObjectParameter("Cidade", typeof(string));

        var uFParameter = uF != null ?
            new ObjectParameter("UF", uF) :
            new ObjectParameter("UF", typeof(string));

        var complementoParameter = complemento != null ?
            new ObjectParameter("Complemento", complemento) :
            new ObjectParameter("Complemento", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEndereco", cepParameter, logradouroParameter, bairroParameter, cidadeParameter, uFParameter, complementoParameter);
    }

    public virtual int InsertLogin(string login, string senha)
    {
        var loginParameter = login != null ?
            new ObjectParameter("login", login) :
            new ObjectParameter("login", typeof(string));

        var senhaParameter = senha != null ?
            new ObjectParameter("senha", senha) :
            new ObjectParameter("senha", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertLogin", loginParameter, senhaParameter);
    }

    public virtual int InsertUsuario(string nome, Nullable<System.DateTime> nascimento, string genero, string endereco, string login)
    {
        var nomeParameter = nome != null ?
            new ObjectParameter("nome", nome) :
            new ObjectParameter("nome", typeof(string));

        var nascimentoParameter = nascimento.HasValue ?
            new ObjectParameter("nascimento", nascimento) :
            new ObjectParameter("nascimento", typeof(System.DateTime));

        var generoParameter = genero != null ?
            new ObjectParameter("genero", genero) :
            new ObjectParameter("genero", typeof(string));

        var enderecoParameter = endereco != null ?
            new ObjectParameter("endereco", endereco) :
            new ObjectParameter("endereco", typeof(string));

        var loginParameter = login != null ?
            new ObjectParameter("login", login) :
            new ObjectParameter("login", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUsuario", nomeParameter, nascimentoParameter, generoParameter, enderecoParameter, loginParameter);
    }

    public virtual ObjectResult<SelectEnderecoFromCep_Result> SelectEnderecoFromCep(string cep)
    {
        var cepParameter = cep != null ?
            new ObjectParameter("Cep", cep) :
            new ObjectParameter("Cep", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectEnderecoFromCep_Result>("SelectEnderecoFromCep", cepParameter);
    }

    public virtual ObjectResult<SelectEnderecoFromCidade_Result> SelectEnderecoFromCidade(string cidade)
    {
        var cidadeParameter = cidade != null ?
            new ObjectParameter("Cidade", cidade) :
            new ObjectParameter("Cidade", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectEnderecoFromCidade_Result>("SelectEnderecoFromCidade", cidadeParameter);
    }

    public virtual ObjectResult<SelectEnderecoFromId_Result> SelectEnderecoFromId(Nullable<int> id)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectEnderecoFromId_Result>("SelectEnderecoFromId", idParameter);
    }

    public virtual ObjectResult<SelectEnderecos_Result> SelectEnderecos()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectEnderecos_Result>("SelectEnderecos");
    }

    public virtual ObjectResult<SelectLogin_Result> SelectLogin()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectLogin_Result>("SelectLogin");
    }

    public virtual ObjectResult<SelectLoginFromId_Result> SelectLoginFromId(Nullable<int> id)
    {
        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectLoginFromId_Result>("SelectLoginFromId", idParameter);
    }

    public virtual ObjectResult<SelectLoginFromLogin_Result> SelectLoginFromLogin(string login)
    {
        var loginParameter = login != null ?
            new ObjectParameter("Login", login) :
            new ObjectParameter("Login", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectLoginFromLogin_Result>("SelectLoginFromLogin", loginParameter);
    }

    public virtual ObjectResult<Nullable<int>> SelectLoginfromLoginAndSenha(string login, string senha)
    {
        var loginParameter = login != null ?
            new ObjectParameter("Login", login) :
            new ObjectParameter("Login", typeof(string));

        var senhaParameter = senha != null ?
            new ObjectParameter("Senha", senha) :
            new ObjectParameter("Senha", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SelectLoginfromLoginAndSenha", loginParameter, senhaParameter);
    }

    public virtual ObjectResult<SelectUsuarioFromCep_Result> SelectUsuarioFromCep(string cep)
    {
        var cepParameter = cep != null ?
            new ObjectParameter("cep", cep) :
            new ObjectParameter("cep", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUsuarioFromCep_Result>("SelectUsuarioFromCep", cepParameter);
    }

    public virtual ObjectResult<SelectUsuarioFromLogin_Result> SelectUsuarioFromLogin(string login)
    {
        var loginParameter = login != null ?
            new ObjectParameter("Login", login) :
            new ObjectParameter("Login", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUsuarioFromLogin_Result>("SelectUsuarioFromLogin", loginParameter);
    }

    public virtual ObjectResult<SelectUsuarioFromNome_Result> SelectUsuarioFromNome(string nome)
    {
        var nomeParameter = nome != null ?
            new ObjectParameter("Nome", nome) :
            new ObjectParameter("Nome", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUsuarioFromNome_Result>("SelectUsuarioFromNome", nomeParameter);
    }

    public virtual ObjectResult<SelectUsuarios_Result> SelectUsuarios()
    {
        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUsuarios_Result>("SelectUsuarios");
    }

    public virtual int UpdateEndereco(string cepAntigo, string cep, string logradouro, string bairro, string cidade, string uF, string complemento)
    {
        var cepAntigoParameter = cepAntigo != null ?
            new ObjectParameter("CepAntigo", cepAntigo) :
            new ObjectParameter("CepAntigo", typeof(string));

        var cepParameter = cep != null ?
            new ObjectParameter("Cep", cep) :
            new ObjectParameter("Cep", typeof(string));

        var logradouroParameter = logradouro != null ?
            new ObjectParameter("Logradouro", logradouro) :
            new ObjectParameter("Logradouro", typeof(string));

        var bairroParameter = bairro != null ?
            new ObjectParameter("Bairro", bairro) :
            new ObjectParameter("Bairro", typeof(string));

        var cidadeParameter = cidade != null ?
            new ObjectParameter("Cidade", cidade) :
            new ObjectParameter("Cidade", typeof(string));

        var uFParameter = uF != null ?
            new ObjectParameter("UF", uF) :
            new ObjectParameter("UF", typeof(string));

        var complementoParameter = complemento != null ?
            new ObjectParameter("Complemento", complemento) :
            new ObjectParameter("Complemento", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEndereco", cepAntigoParameter, cepParameter, logradouroParameter, bairroParameter, cidadeParameter, uFParameter, complementoParameter);
    }

    public virtual int UpdateLogin(string loginAntigo, string login, string senha)
    {
        var loginAntigoParameter = loginAntigo != null ?
            new ObjectParameter("LoginAntigo", loginAntigo) :
            new ObjectParameter("LoginAntigo", typeof(string));

        var loginParameter = login != null ?
            new ObjectParameter("Login", login) :
            new ObjectParameter("Login", typeof(string));

        var senhaParameter = senha != null ?
            new ObjectParameter("Senha", senha) :
            new ObjectParameter("Senha", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLogin", loginAntigoParameter, loginParameter, senhaParameter);
    }

    public virtual int UpdateUsuario(string login, string nome, Nullable<System.DateTime> nascimento, string genero, string cep)
    {
        var loginParameter = login != null ?
            new ObjectParameter("Login", login) :
            new ObjectParameter("Login", typeof(string));

        var nomeParameter = nome != null ?
            new ObjectParameter("Nome", nome) :
            new ObjectParameter("Nome", typeof(string));

        var nascimentoParameter = nascimento.HasValue ?
            new ObjectParameter("Nascimento", nascimento) :
            new ObjectParameter("Nascimento", typeof(System.DateTime));

        var generoParameter = genero != null ?
            new ObjectParameter("Genero", genero) :
            new ObjectParameter("Genero", typeof(string));

        var cepParameter = cep != null ?
            new ObjectParameter("Cep", cep) :
            new ObjectParameter("Cep", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUsuario", loginParameter, nomeParameter, nascimentoParameter, generoParameter, cepParameter);
    }
}
